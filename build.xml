<?xml version="1.0" encoding="utf-8"?>
<!-- mySimpleBuild.xml -->
<project name="My App Builder" basedir="." default="swc">

  <import file="properties.xml" />

  <!-- clean -->
  <target name="clean">
    <delete dir="${APP_ROOT}" />
	</target>
    
  <!-- prepare to build -->
	<target name="prepare" depends="clean">
  
    <echo message="*******************************************************"/>
    <echo message="BUILD_TIME = ${BUILD_TIME}"/>
    <echo message="*******************************************************"/>
    
    <mkdir dir="${APP_ROOT}" />
    <mkdir dir="${APP_ROOT}/src" />
    
		<copy todir="${APP_SRC}">
			<!--<fileset dir="HsEffects/src" excludes="*.mxml, *.as" includes="**/*" />
      <fileset dir="HsUpload/src" excludes="*.mxml, *.as" includes="**/*" />
      <fileset dir="HsImageCropper/src" excludes="*.mxml, *.as" includes="**/*" />
      <fileset dir="HsTip/src" excludes="*.mxml, *.as" includes="**/*" />-->
      <fileset dir="HsFramework/src" excludes="*.mxml, *.as" includes="**/*" />
      <fileset dir="HsCommon/src" excludes="*.mxml, *.as" includes="**/*" />
		</copy>
    
 		<fileset dir="${APP_SRC}" id="src.files">
			<include name="**/**" />
      <exclude name="**/*As.as" />
      <exclude name="**/*Example.mxml" />
		</fileset>   
    
    <pathconvert property="evaFramework_classes"
      pathsep=" " dirsep="." refid="src.files">
      <map from="\" to="/"/>
      <map from="${APP_SRC}/" to=""/>
      <mapper>
        <chainedmapper>
          <globmapper from="*.as" to="*"/>
        </chainedmapper>
      </mapper>
    </pathconvert>
	</target>
  
  <!-- Confusion codes
  <target name="confusion" depends="prepare">
    <echo message="Start confusing code..." />
    <for param="file">
      <path>
        <fileset dir="${APP_ROOT}">
          <include name="**/*.as" />
        </fileset>
      </path>
      <sequential>
        <confusion fileName="@{file}" />
      </sequential>
    </for>
    <echo message="Code confusion completed." />
  </target> -->

  <!-- build -->
	<target name="swc" depends="prepare">

		<compc output="${APP_ROOT}/${swc.name}" include-classes="${evaFramework_classes}" debug="false">
			<source-path path-element="${APP_SRC}" />
      <compiler.external-library-path dir="${FLEX_HOME}/frameworks">
        <include name="**/*.swc" />
      </compiler.external-library-path>
      <!-- 添加项目中的SWC包,请注意这里是外部
      <compiler.external-library-path dir="${dist.home.libs}">
        <include name="**/*.swc" />
      </compiler.external-library-path> -->
		</compc>
    
	</target>
  
    <target name="optimize-swc" depends="swc">

    <macrodef name="optimize-rsl">
      <attribute name="rsl-dir" />
      <attribute name="swc-path" />
      <sequential>
        <propertyregex override="yes" property="swc-name" input="@{swc-path}" regexp="bin\\(.*).swc" select="\1" />
        <propertyregex override="yes" property="swc-dir" input="@{swc-path}" regexp="(.*)\\(.*).swc" select="\1" />

        <unzip src="${APP_ROOT}/${swc.name}" dest="@{rsl-dir}">
          <patternset>
            <include name="library.swf" />
          </patternset>
        </unzip>
        <!-- 优化SWF文件 -->
        <java jar="${FLEX_HOME}\lib\optimizer.jar" fork="true" failonerror="true">
          <jvmarg line="-ea -DAS3 -DAVMPLUS -Dflexlib=${FLEX_HOME}\frameworks -Xms32m -Xmx384m -Dsun.io.useCanonCaches=false" />
          <arg line="'@{rsl-dir}/library.swf' --output '@{rsl-dir}/${swc-name}.swf'
      --keep-as3-metadata='Bindable,Managed,ChangeEvent,NonCommittingChangeEvent,Transient,RemoteClass' " />
        </java>
        <!-- 重建描述文件 -->
        <java jar="${FLEX_HOME}/lib/digest.jar" fork="true" failonerror="true">
          <jvmarg line="-ea -DAS3 -DAVMPLUS -Xms32m -Xmx384m -Dsun.io.useCanonCaches=false" />
          <arg line="--digest.rsl-file  @{rsl-dir}/${swc-name}.swf --digest.swc-path  @{rsl-dir}/${swc-name}.swc" />
        </java>
        <!-- 清除解压出来的文件 -->
        <delete>
          <fileset dir="@{rsl-dir}" includes="*.swf" />
        </delete>
      </sequential>
    </macrodef>

    <!-- 优化所有SWC文件 -->
    <for param="file">
      <path>
        <fileset dir="${dist.home.bin}">
          <include name="*.swc" />
        </fileset>
      </path>
      <sequential>
        <!-- 优化SWC -->
        <optimize-rsl rsl-dir="${dist.home.bin}" swc-path="@{file}" />
        <echo message="optimize @{file} success~!" />
      </sequential>
    </for>
  </target>
  
  <!-- build doc -->
  <target name="doc" depends="prepare">
    <exec executable="${FLEX_HOME}/bin/asDoc.exe">
      <arg value="-source-path" />
      <arg value="${APP_SRC}" />
      <arg value="-doc-sources" />
      <arg value="${APP_SRC}" />
      <arg value="-main-title" />
      <arg value="Hamster Flex API Documentation" />
      <arg value="-window-title" />
      <arg value="Hamster Flex API Documentation" />
      <arg value="-output" />
      <arg value="api-doc" />
    </exec>
  </target>

</project>
